version: '3'
services:
    docs:
        image: squidfunk/mkdocs-material:3.3.0
        command: build
        volumes:
            - ./ajuda-src:/docs
    docs_gestor:
        image: squidfunk/mkdocs-material:3.3.0
        command: build
        volumes:
            - ./ajuda-gestor-src:/docs
    db:
        image: postgres
        env_file:
            - .env
        ports:
            - "6432:5432"
        restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
        stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
        volumes:
            - ./volumes/db/:/var/lib/postgresql/data
            - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - helios-network
    helios:
        build:
            dockerfile: ./docker/Dockerfile
            context: ./
        command: bash -c "gunicorn wsgi --log-level=debug --log-file=- --worker-class=sync --workers=4 --worker-tmp-dir=/dev/shm --bind 0.0.0.0:8000 --chdir=/var/www/helios-server"
        depends_on:
            - db
        env_file:
            - .env
        environment:
            - USER_ID=1000
            - GROUP_ID=1000
        ports:
            - "80:80"
        networks:
            - helios-network
        restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
        stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
        volumes:
            - ./.:/var/www/helios-server
            - ./volumes/logs/nginx:/var/log/nginx
            - ./volumes/logs/celery:/var/log/celery
            - ./volumes/logs/redis:/var/log/redis
            - ./volumes/logs/supervisor:/var/log/supervisor
networks:
    helios-network:
        driver: bridge
